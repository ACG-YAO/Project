.settingcard {
  width: 60%; /* You may want to keep this as a percentage */
  height: 80vh; /* This will make the height responsive to the screen size */
  margin: 1vh auto; /* Responsive vertical margin, auto for horizontal centering */
  /* background: #ecf39e; */
  background: #f5e583;
  padding: 1vw; /* Padding responsive to the width of the screen */
  display: flex;
  flex-wrap: wrap;
  /* color: #31572c; */
  border-radius: 1vw; /* Make border-radius responsive */
  /* box-shadow: -1vw 1vw 0vh -0.25vw #31572c; */
  box-shadow: -1vw 1vw 0vh -0.25vw #b99803;
  flex-direction: column;
  /* align-items: center; Center children */
}
  
  .setting-container {
      display: flex;
      flex-direction: row; /* This stacks the buttons vertically */
      align-items: center; /* This centers the buttons horizontally */
      justify-content: flex-start;
    }
  
  .card__tags {
    overflow: auto;
    height: 80%;
  }
.settingtitle {
    font-weight: 900;
    font-size: 6vh;
  }
  
  .tag-container {
    display: flex;
    flex-direction: column; /* This stacks the buttons vertically */
    align-items: center; /* This centers the buttons horizontally */
    justify-content: flex-start;
  }
  
  .tag__name {
    display: inline-block;
    color: #fff;
    font-size: 3.5vh;
    /* background-color: #31572c; */
    background-color:  #b99803;
    padding: 1vh 5vh 2vh;
    border-radius: 50vh;
    margin: 2vh 3vh 2vh 0;
    margin-left: 0vh;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    min-width: 20vh; /* Adjust as needed */
    height: 4vh; /* Adjust as needed */

    /* Center the text */
    text-align: center;
    line-height: 5vh; 
  }
  
  .tag__name::before,
  .tag__name::after {
    content: "";
    display: inline-block;
    position: absolute;
    top: 40%;
    width: 1.5vh;
    height: 1.5vh;
    border-radius: 50%;
    /* background: #90a955; */
    background: #f4e39c;
  }
  
  .tag__name::before {
    left: 1.5vh;
  }
  
  .tag__name::after {
    right: 1.5vh;
  }
  
  /* .tag__name:hover {
    transform: scale(1.1);
    background-color: #51572c;
  } */
  
  
  
  .customCheckBoxHolder {
      margin: 1vh;
      display: flex;
    }
    
    .customCheckBox {
      width: fit-content;
      position: relative;
      overflow: hidden;
      cursor: pointer;
      user-select: none;
      padding: 1vh 6vh;
      background-color: rgba(0, 0, 0, 0.16);
      border-radius: 0vh;
      color: rgba(255, 255, 255, 0.7);
      transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
      transition-duration: 300ms;
      transition-property: color, background-color, box-shadow;
      display: flex;
      height: 4vh;
      align-items: center;
      box-shadow: rgba(0, 0, 0, 0.15) 0vh 0.5vh 0.25vh 0vh inset, rgba(255, 255, 255, 0.17) 0vh 0.25vh 0.25vh 0vh;
      outline: none;
      justify-content: center;
      min-width: 13vh;
    }
    
    .customCheckBox:hover {
      /* background-color: #9bbb64; */
      background-color:  #c6af49;
      color: white;
      box-shadow: rgba(0, 0, 0, 0.23) 0vh -1vh 0.251vh 0vh inset, rgba(255, 255, 255, 0.17) 0vh -0.251vh 0.251vh 0vh, rgba(0, 0, 0, 0.17) 0vh 0.5vh 1vh 0.25vh;
    }
    
    .customCheckBox .inner {
      font-size: 4vh;
      font-weight: 900;
      pointer-events: none;
      transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
      transition-duration: 300ms;
      transition-property: transform;
      transform: translateY(0vh);
    }
    
    .customCheckBox:hover .inner {
      transform: translateY(-);
    }
    
    /* Multiple Checkboxes can be chained together for a radio input */
    .customCheckBoxWrapper:first-of-type .customCheckBox {
      border-bottom-left-radius: 1vh;
      border-top-left-radius: 1vh;
      border-right: 0vh;
    }
    
    .customCheckBoxWrapper:last-of-type .customCheckBox {
      border-bottom-right-radius: 1vh;
      border-top-right-radius: 1vh;
      border-left: 0vh;
    }
    
    .customCheckBoxInput {
      display: none;
    }
    .customCheckBox.active {
      /* background-color: #2d6737; */
      background-color:  #b99803;
      color: white;
      box-shadow: rgba(0, 0, 0, 0.23) 0vh -1vh 0.251vh 0vh inset, rgba(255, 255, 255, 0.17) 0vh -0.251vh 0.251vh 0vh, rgba(0, 0, 0, 0.17) 0vh 0.5vh 1vh 0.25vh;
  }
  
  /* Adjust the .inner div when .customCheckBox is active */
  .customCheckBox.active .inner {
      transform: translateY(-0.5vh);
  }
  
  /* Style for when an active .customCheckBox is hovered */
  .customCheckBox.active:hover {
      /* background-color: #34723f; */
      background-color:  #b99803;
      box-shadow: rgba(0, 0, 0, 0.26) 0vh -1vh 0.25vh 0vh inset, rgba(255, 255, 255, 0.17) 0vh -0.251vh 0.251vh 0vh, rgba(0, 0, 0, 0.15) 0vh 0.75vh 1.5vh 0.5vh;
  }
  
  .customCheckBox:not(.active):hover .inner {
      transform: translateY(-0.5vh);
  }
  
  .customCheckBox .inner.on {
    color: #2d6737; /* Green color for 'On' state */
  }
  
  .customCheckBox .inner.off {
    color: rgb(106, 15, 12); /* Red color for 'Off' state */
  }
  
  .error {
    position: fixed;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    width: 80vh;
    padding: 1.4vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: start;
    background: #EF665B;
    border-radius: 2vh;
    box-shadow: 0vh 0vh 1.3vh -0.8vh #111;
    z-index: 9999; 
    top: 3vh; /* Align to the top of the viewport */
  }
  
  .error__icon {
    width: 5vh;
    height: 5vh;
    transform: translateY(-0.5vh);
    margin-right: 2vh;
  }
  
  .error__icon path {
    fill: #fff;
  }
  
  .error__title {
    font-weight: 500;
    font-size: 3.5vh;
    color: #fff;
  }
  